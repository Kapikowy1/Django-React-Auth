{"ast":null,"code":"import Cookies from 'js-cookie';\nimport axios from 'axios';\nimport { LOAD_USER_PROFILE_SUCCESS, LOAD_USER_PROFILE_FAIL, UPDATE_USER_PROFILE_SUCCESS, UPDATE_USER_PROFILE_FAIL } from './myTypes';\nexport const load_user = () => async dispatch => {\n  const config = {\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    }\n  };\n  try {\n    const res = await axios.get(`${process.env.REACT_APP_API_URL}/profile/user`, config);\n    if (res.data.error) {\n      dispatch({\n        type: LOAD_USER_PROFILE_FAIL\n      });\n    } else {\n      dispatch({\n        type: LOAD_USER_PROFILE_SUCCESS,\n        payload: res.data\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: LOAD_USER_PROFILE_FAIL\n    });\n  }\n};\nexport const update_profile = (first_name, last_name, phone, city) => async dispatch => {\n  const config = {\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'X-CSRFToken': Cookies.get('csrftoken')\n    }\n  };\n  const body = JSON.stringify({\n    'withCredentials': true,\n    first_name,\n    last_name,\n    phone,\n    city\n  });\n  try {\n    const res = await axios.put(`${process.env.REACT_APP_API_URL}/profile/update`, body, config);\n    if (res.data.profile && res.data.username) {\n      dispatch({\n        type: UPDATE_USER_PROFILE_SUCCESS,\n        payload: res.data\n      });\n    } else {\n      dispatch({\n        type: UPDATE_USER_PROFILE_FAIL\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: UPDATE_USER_PROFILE_FAIL\n    });\n  }\n};","map":{"version":3,"names":["Cookies","axios","LOAD_USER_PROFILE_SUCCESS","LOAD_USER_PROFILE_FAIL","UPDATE_USER_PROFILE_SUCCESS","UPDATE_USER_PROFILE_FAIL","load_user","dispatch","config","headers","res","get","process","env","REACT_APP_API_URL","data","error","type","payload","err","update_profile","first_name","last_name","phone","city","body","JSON","stringify","put","profile","username"],"sources":["C:/Users/newus/OneDrive/Pulpit/uregister/DocoAppDemoFinal/frontend/src/actions/profile.js"],"sourcesContent":["import Cookies from 'js-cookie';\r\nimport axios from 'axios';\r\nimport {\r\n    LOAD_USER_PROFILE_SUCCESS,\r\n    LOAD_USER_PROFILE_FAIL,\r\n    UPDATE_USER_PROFILE_SUCCESS,\r\n    UPDATE_USER_PROFILE_FAIL\r\n} from './myTypes';\r\n\r\nexport const load_user = () => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    try {\r\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/profile/user`, config);\r\n\r\n        if (res.data.error) {\r\n            dispatch({\r\n                type: LOAD_USER_PROFILE_FAIL\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: LOAD_USER_PROFILE_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        }\r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOAD_USER_PROFILE_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const update_profile = (first_name, last_name, phone, city) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'X-CSRFToken': Cookies.get('csrftoken')\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({\r\n        'withCredentials': true,\r\n        first_name,\r\n        last_name,\r\n        phone,\r\n        city\r\n    });\r\n\r\n    try {\r\n        const res = await axios.put(`${process.env.REACT_APP_API_URL}/profile/update`, body, config);\r\n\r\n        if (res.data.profile && res.data.username) {\r\n            dispatch({\r\n                type: UPDATE_USER_PROFILE_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: UPDATE_USER_PROFILE_FAIL\r\n            });\r\n        }\r\n    } catch (err) {\r\n        dispatch({\r\n            type: UPDATE_USER_PROFILE_FAIL\r\n        });\r\n    }\r\n};\r\n"],"mappings":"AAAA,OAAOA,OAAO,MAAM,WAAW;AAC/B,OAAOC,KAAK,MAAM,OAAO;AACzB,SACIC,yBAAyB,EACzBC,sBAAsB,EACtBC,2BAA2B,EAC3BC,wBAAwB,QACrB,WAAW;AAElB,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAM,MAAMC,QAAQ,IAAI;EAC7C,MAAMC,MAAM,GAAG;IACXC,OAAO,EAAE;MACL,QAAQ,EAAE,kBAAkB;MAC5B,cAAc,EAAE;IACpB;EACJ,CAAC;EAED,IAAI;IACA,MAAMC,GAAG,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,iBAAkB,eAAc,EAAEN,MAAM,CAAC;IAEpF,IAAIE,GAAG,CAACK,IAAI,CAACC,KAAK,EAAE;MAChBT,QAAQ,CAAC;QACLU,IAAI,EAAEd;MACV,CAAC,CAAC;IACN,CAAC,MAAM;MACHI,QAAQ,CAAC;QACLU,IAAI,EAAEf,yBAAyB;QAC/BgB,OAAO,EAAER,GAAG,CAACK;MACjB,CAAC,CAAC;IACN;EACJ,CAAC,CAAC,OAAOI,GAAG,EAAE;IACVZ,QAAQ,CAAC;MACLU,IAAI,EAAEd;IACV,CAAC,CAAC;EACN;AACJ,CAAC;AAED,OAAO,MAAMiB,cAAc,GAAGA,CAACC,UAAU,EAAEC,SAAS,EAAEC,KAAK,EAAEC,IAAI,KAAK,MAAMjB,QAAQ,IAAI;EACpF,MAAMC,MAAM,GAAG;IACXC,OAAO,EAAE;MACL,QAAQ,EAAE,kBAAkB;MAC5B,cAAc,EAAE,kBAAkB;MAClC,aAAa,EAAET,OAAO,CAACW,GAAG,CAAC,WAAW;IAC1C;EACJ,CAAC;EAED,MAAMc,IAAI,GAAGC,IAAI,CAACC,SAAS,CAAC;IACxB,iBAAiB,EAAE,IAAI;IACvBN,UAAU;IACVC,SAAS;IACTC,KAAK;IACLC;EACJ,CAAC,CAAC;EAEF,IAAI;IACA,MAAMd,GAAG,GAAG,MAAMT,KAAK,CAAC2B,GAAG,CAAE,GAAEhB,OAAO,CAACC,GAAG,CAACC,iBAAkB,iBAAgB,EAAEW,IAAI,EAAEjB,MAAM,CAAC;IAE5F,IAAIE,GAAG,CAACK,IAAI,CAACc,OAAO,IAAInB,GAAG,CAACK,IAAI,CAACe,QAAQ,EAAE;MACvCvB,QAAQ,CAAC;QACLU,IAAI,EAAEb,2BAA2B;QACjCc,OAAO,EAAER,GAAG,CAACK;MACjB,CAAC,CAAC;IACN,CAAC,MAAM;MACHR,QAAQ,CAAC;QACLU,IAAI,EAAEZ;MACV,CAAC,CAAC;IACN;EACJ,CAAC,CAAC,OAAOc,GAAG,EAAE;IACVZ,QAAQ,CAAC;MACLU,IAAI,EAAEZ;IACV,CAAC,CAAC;EACN;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}