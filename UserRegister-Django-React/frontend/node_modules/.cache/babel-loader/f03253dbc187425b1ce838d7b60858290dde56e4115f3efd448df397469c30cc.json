{"ast":null,"code":"import axios from 'axios';\nimport { REGISTER_SUCCESS, REGISTER_FAIL } from './types';\nexport const register = (username, password, re_password) => async dispatch => {\n  const config = {\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'X-CSRFToken': Cookies.get('csrftoken')\n    }\n  };\n  const body = JSON.stringify({\n    username,\n    password,\n    re_password\n  });\n  try {\n    const res = await axios.post(`${process.env.REACT_APP_API_URL}/accounts/register`, body, config);\n    if (res.data.error) {\n      dispatch({\n        type: REGISTER_FAIL\n      });\n    } else {\n      dispatch({\n        type: REGISTER_SUCCESS\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n};","map":{"version":3,"names":["axios","REGISTER_SUCCESS","REGISTER_FAIL","register","username","password","re_password","dispatch","config","headers","Cookies","get","body","JSON","stringify","res","post","process","env","REACT_APP_API_URL","data","error","type","err"],"sources":["C:/Users/newus/OneDrive/Pulpit/DocoAppDemoFinal/frontend/src/reducers/auth.js"],"sourcesContent":["import axios from 'axios';\r\nimport {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n} from './types';\r\n\r\nexport const register = (username, password, re_password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'X-CSRFToken': Cookies.get('csrftoken')\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ username, password, re_password });\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/accounts/register`, body, config);\r\n\r\n        if (res.data.error) {\r\n            dispatch({\r\n                type: REGISTER_FAIL\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: REGISTER_SUCCESS\r\n            });\r\n        }\r\n    } catch (err) {\r\n        dispatch({\r\n            type: REGISTER_FAIL\r\n        });\r\n    }\r\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACIC,gBAAgB,EAChBC,aAAa,QACV,SAAS;AAEhB,OAAO,MAAMC,QAAQ,GAAGA,CAACC,QAAQ,EAAEC,QAAQ,EAAEC,WAAW,KAAK,MAAMC,QAAQ,IAAI;EAC3E,MAAMC,MAAM,GAAG;IACXC,OAAO,EAAE;MACL,QAAQ,EAAE,kBAAkB;MAC5B,cAAc,EAAE,kBAAkB;MAClC,aAAa,EAAEC,OAAO,CAACC,GAAG,CAAC,WAAW;IAC1C;EACJ,CAAC;EAED,MAAMC,IAAI,GAAGC,IAAI,CAACC,SAAS,CAAC;IAAEV,QAAQ;IAAEC,QAAQ;IAAEC;EAAY,CAAC,CAAC;EAEhE,IAAI;IACA,MAAMS,GAAG,GAAG,MAAMf,KAAK,CAACgB,IAAI,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,iBAAkB,oBAAmB,EAAEP,IAAI,EAAEJ,MAAM,CAAC;IAEhG,IAAIO,GAAG,CAACK,IAAI,CAACC,KAAK,EAAE;MAChBd,QAAQ,CAAC;QACLe,IAAI,EAAEpB;MACV,CAAC,CAAC;IACN,CAAC,MAAM;MACHK,QAAQ,CAAC;QACLe,IAAI,EAAErB;MACV,CAAC,CAAC;IACN;EACJ,CAAC,CAAC,OAAOsB,GAAG,EAAE;IACVhB,QAAQ,CAAC;MACLe,IAAI,EAAEpB;IACV,CAAC,CAAC;EACN;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}