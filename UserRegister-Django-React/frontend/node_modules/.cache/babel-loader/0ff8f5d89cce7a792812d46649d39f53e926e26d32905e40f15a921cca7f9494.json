{"ast":null,"code":"import axios from 'axios';\nimport Cookies from 'js-cookie';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT_SUCCESS, LOGOUT_FAIL } from './myTypes';\nexport const checkAuthenticated = () => async dispatch => {\n  const config = {\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    }\n  };\n  try {\n    const res = await axios.get(`${process.env.REACT_APP_API_URL}/accounts/authenticated`, config);\n    if (res.data.error || res.data.isAuthenticated === 'error') {\n      dispatch({\n        type: AUTHENTICATED_FAIL,\n        payload: false\n      });\n    } else if (res.data.isAuthenticated === 'success') {\n      dispatch({\n        type: AUTHENTICATED_SUCCESS,\n        payload: true\n      });\n    } else {\n      dispatch({\n        type: AUTHENTICATED_FAIL,\n        payload: false\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: AUTHENTICATED_FAIL,\n      payload: false\n    });\n  }\n};\nexport const login = (username, password) => async dispatch => {\n  const config = {\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'X-CSRFToken': Cookies.get('csrftoken')\n    }\n  };\n  const body = JSON.stringify({\n    username,\n    password\n  });\n  try {\n    const res = await axios.post(`${process.env.REACT_APP_API_URL}/accounts/login`, body, config);\n    if (res.data.success) {\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data.username\n      });\n    } else {\n      dispatch({\n        type: LOGIN_FAIL\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n};\nexport const register = (username, password, re_password) => async dispatch => {\n  const config = {\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'X-CSRFToken': Cookies.get('csrftoken')\n    }\n  };\n  const body = JSON.stringify({\n    username,\n    password,\n    re_password\n  });\n  try {\n    const res = await axios.post(`${process.env.REACT_APP_API_URL}/accounts/register`, body, config);\n    if (res.data.error) {\n      dispatch({\n        type: REGISTER_FAIL\n      });\n    } else {\n      dispatch({\n        type: REGISTER_SUCCESS\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n};\nexport const logout = () => async dispatch => {\n  const config = {\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'X-CSRFToken': Cookies.get('csrftoken')\n    }\n  };\n  const body = JSON.stringify({\n    'withCredentials': true\n  });\n  try {\n    const res = await axios.post(`${process.env.REACT_APP_API_URL}/accounts/logout`, body, config);\n    if (res.data.success) {\n      dispatch({\n        type: LOGOUT_SUCCESS\n      });\n    } else {\n      dispatch({\n        type: LOGOUT_FAIL\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: LOGOUT_FAIL\n    });\n  }\n};","map":{"version":3,"names":["axios","Cookies","REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT_SUCCESS","LOGOUT_FAIL","checkAuthenticated","dispatch","config","headers","res","get","process","env","REACT_APP_API_URL","data","error","isAuthenticated","type","AUTHENTICATED_FAIL","payload","AUTHENTICATED_SUCCESS","err","login","username","password","body","JSON","stringify","post","success","register","re_password","logout"],"sources":["C:/Users/newus/OneDrive/Pulpit/DocoAppDemoFinal/frontend/src/actions/auth.js"],"sourcesContent":["import axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\nimport {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    LOGOUT_FAIL,\r\n} from './myTypes';\r\n\r\nexport const checkAuthenticated = () => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    try {\r\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/accounts/authenticated`, config);\r\n\r\n        if (res.data.error || res.data.isAuthenticated === 'error') {\r\n            dispatch({\r\n                type: AUTHENTICATED_FAIL,\r\n                payload: false\r\n            });\r\n        }\r\n        else if (res.data.isAuthenticated === 'success') {\r\n            dispatch({\r\n                type: AUTHENTICATED_SUCCESS,\r\n                payload: true\r\n            });\r\n        }\r\n        else {\r\n            dispatch({\r\n                type: AUTHENTICATED_FAIL,\r\n                payload: false\r\n            });\r\n        }\r\n    } catch(err) {\r\n        dispatch({\r\n            type: AUTHENTICATED_FAIL,\r\n            payload: false\r\n        });\r\n    }\r\n};\r\n\r\nexport const login = (username, password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'X-CSRFToken': Cookies.get('csrftoken')\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ username, password });\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/accounts/login`, body, config);\r\n\r\n        if (res.data.success) {\r\n            dispatch({\r\n                type: LOGIN_SUCCESS,\r\n                payload: res.data.username\r\n            });\r\n\r\n            \r\n        } else {\r\n            dispatch({\r\n                type: LOGIN_FAIL\r\n            });\r\n        }\r\n    } catch(err) {\r\n        dispatch({\r\n            type: LOGIN_FAIL\r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const register = (username, password, re_password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'X-CSRFToken': Cookies.get('csrftoken')\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ username, password, re_password });\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/accounts/register`, body, config);\r\n\r\n        if (res.data.error) {\r\n            dispatch({\r\n                type: REGISTER_FAIL\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: REGISTER_SUCCESS\r\n            });\r\n        }\r\n    } catch (err) {\r\n        dispatch({\r\n            type: REGISTER_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const logout = () => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'X-CSRFToken': Cookies.get('csrftoken')\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({\r\n        'withCredentials': true\r\n    });\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/accounts/logout`, body, config);\r\n\r\n        if (res.data.success) {\r\n            dispatch({\r\n                type: LOGOUT_SUCCESS\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: LOGOUT_FAIL\r\n            });\r\n        }\r\n    } catch(err) {\r\n        dispatch({\r\n            type: LOGOUT_FAIL\r\n        });\r\n    }\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}